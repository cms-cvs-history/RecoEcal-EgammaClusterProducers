#
#  run on collection of ecal digis, make rechits, and then super clusters and store them
#  in the output collection
#
#  digi->rechit based on example from Fabio Cossutti
#
#  Author: David Futyan & Shahram Rahatlou
#  $Id: egammaDigiToClusters.cfg,v 1.6 2006/07/21 15:18:04 rahatlou Exp $
#
process egammaDigiToClusters = {

 # initialize  MessageLogger
 include "FWCore/MessageLogger/data/MessageLogger.cfi"

 # input
  source = PoolSource {
     #untracked vstring fileNames = {'file:ecal_digis.root'}
     untracked vstring fileNames = {'file:/u1/rahatlou/releases/CMSSW_2006-08-02/src/Configuration/Applications/data/reco-application-ecal-digitization.root'}
     untracked int32 maxEvents = -1
     untracked uint32 debugVebosity = 10
     untracked bool   debugFlag     = true
  }

  #ECAL LocalReco sequence
  include "RecoLocalCalo/EcalRecProducers/data/ecalLocalRecoSequence.cff"

  # clustering starts here

  # geometry needed for clustering
  include "RecoEcal/EgammaClusterProducers/data/geometryForClustering.cff"

  #------------------
  #Island clustering:
  #------------------
  # create sequence for island clustering
  include "RecoEcal/EgammaClusterProducers/data/islandClusteringSequence.cff"

  #------------------
  #Hybrid clustering:
  #------------------
  # hybrid clustering sequence
  include "RecoEcal/EgammaClusterProducers/data/hybridClusteringSequence.cff"

  # clusters in preshower
  include "RecoEcal/EgammaClusterProducers/data/preshowerClusteringSequence.cff"


  # create sequence with all clustering algos
  #sequence ecalClustering = { islandClusteringSequence & hybridClusteringSequence, preshowerClusteringSequence }

  # path to run everything
  #path p = { ecalLocalRecoSequence, ecalClustering }
  path p = { ecalLocalRecoSequence, islandClusteringSequence & hybridClusteringSequence, preshowerClusteringSequence }


  # output module
  module o2 = PoolOutputModule
  {
     untracked string fileName = "egamma_clusters.root"
     untracked vstring outputCommands =
     {
       "drop *",
       "keep edmHepMCProduct_*_*_*",
       "keep recoBasicClusters_*_*_*",
       "keep recoSuperClusters_*_*_*",
       "keep *_preshowerClusters_*_*"
     }
  }

  endpath outpath = { o2 }
}
