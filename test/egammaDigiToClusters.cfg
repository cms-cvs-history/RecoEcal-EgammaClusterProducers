#
#  run on collection of ecal digis, make rechits, and then super clusters and store them
#  in the output collection
#
#  digi->rechit based on example from Fabio Cossutti
#
#  Author: David Futyan & Shahram Rahatlou
#  $Id: egammaDigiToClusters.cfg,v 1.4 2006/05/25 11:31:54 rahatlou Exp $
#
process egammaDigiToClusters = {
   service = MessageLogger
   {
      untracked vstring destinations = {"cerr", "cout"}
      PSet cerr                      = { string threshold = "WARNING" }
      PSet cout                      = { string threshold = "INFO"    }

      untracked vstring fwkJobReports = {"FrameworkJobReport.xml"}
      vstring categories = { "FwkJob" }

      PSet FrameworkJobReport.xml = {
                                PSet default = { int32 limit = 0 }
                                PSet FwkJob = { int32 limit = 10000000 }
                                    }

   }

 #######################################################################################
 # input
  source = PoolSource {
     untracked vstring fileNames = {'file:ecal_digis.root'}
     untracked int32 maxEvents = -1
     untracked uint32 debugVebosity = 10
     untracked bool   debugFlag     = true
  }

  #ECAL LocalReco sequence
  include "RecoLocalCalo/EcalRecProducers/data/ecalLocalRecoSequence.cff"

  # clustering starts here

  # geometry needed for clustering
  include "RecoEcal/EgammaClusterProducers/data/geometryForClustering.cff"

  #------------------
  #Island clustering:
  #------------------
  # create sequence for island clustering
  include "RecoEcal/EgammaClusterProducers/data/islandClusteringSequence.cff"

  #------------------
  #Hybrid clustering:
  #------------------
  # hybrid clustering sequence
  include "RecoEcal/EgammaClusterProducers/data/hybridClusteringSequence.cff"

  # clusters in preshower
  include "RecoEcal/EgammaClusterProducers/data/preshowerClusteringSequence.cff"


  # create sequence with all clustering algos
  sequence ecalClustering = { islandClusteringSequence & hybridClusteringSequence, preshowerClusteringSequence }

  # path to run everything
  path p = { ecalLocalRecoSequence, ecalClustering }


  # output module
  module o2 = PoolOutputModule
  {
     untracked string fileName = "egamma_clusters.root"
     untracked vstring outputCommands =
     {
       "drop *",
       "keep edmHepMCProduct_*_*_*",
       "keep recoBasicClusters_*_*_*",
       "keep recoSuperClusters_*_*_*"
     }
  }

  endpath outpath = { o2 }
}
