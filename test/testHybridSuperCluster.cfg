#
# run the hybrid clustering sequence including the energy correction
# and store the super clusters in the output collection
#
# $Id: $
#
process HybridSuperClusterProcess = 
{

  source = PoolSource 
  {
    # Number of events program should run
    #untracked vstring fileNames = {'rfio:/castor/cern.ch/user/t/tsirig/500ele50GeVEcalRecHits.root'}
    untracked vstring fileNames = {'file:/afs/cern.ch/cms/data/CMSSW/Tutorials/May06CPTweekTutorials/EcalReconstruction/e_pt35_rechits.root'}
    untracked int32 maxEvents = -1
  }

  #--------------------------------
  # geometry needed for clustering
  #--------------------------------
  include "RecoEcal/EgammaClusterProducers/data/geometryForClustering.cff"

  #------------------
  #Hybrid clustering:
  #------------------
  # hybrid clustering sequence
  include "RecoEcal/EgammaClusterProducers/data/hybridClusteringSequence.cff"

  path p = { hybridClusteringSequence }

  module o2 = PoolOutputModule 
  { 
     untracked string fileName = "hybridSC.root" 
     untracked vstring outputCommands = 
     {
       "drop *",
       "keep edmHepMCProduct_*_*_*",
       "keep recoBasicClusters_*_*_*",
       "keep recoSuperClusters_*_*_*"
     }
  }
 
  endpath outpath = { o2 }
}

