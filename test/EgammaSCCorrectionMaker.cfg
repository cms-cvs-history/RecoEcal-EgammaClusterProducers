process myprocess = 
{

  source = EmptySource 
  {
    # Number of events program should run
    untracked PSet maxEvents = {untracked int32 input = 1}
  }

  # for the geometry:
  es_source = XMLIdealGeometryESSource 
  {
    FileInPath GeometryConfiguration = "SimG4CMS/Calo/test/data/testConfiguration.xml"
    string rootNodeName = ""
  }
  es_module = EcalBarrelGeometryEP {}
  es_module = EcalEndcapGeometryEP {}
  es_module = HcalHardcodeGeometryEP {}  
  es_module = CaloTowerHardcodeGeometryEP {}  
  es_module = CaloGeometryBuilder {}


  # my custom producer of "e/gamma reco hits":
  module mymodule = BumpProducer
  {
    string hitCollection_ = "hitCollection"

    # Produce Hits in the form of Superclusters:
                             #------SC1-------------#    #----SC2------#    #-----SC3----#   #-----SC4-------#
    vdouble maxEnergies = {  5.0, 5.0, 5.0, 5.0, 9.0,     7.0, 6.5, 5.5,      10,  11.0,         9.0, 7.0, 5.0   }
    vint32 phis =         {   80,  90, 100, 110, 120,     210, 215, 201,      280, 290,          11,  22,   1   }
    vint32 etas =         {   54,  55,  55,  56,  54,       1,   2,  -1,      -29, -30,           1,   1,  -1   }

    double T_phi = 1
    double T_eta = 1

    double mean_background = 0.1
    double background_fluctuation = 0.2
  }


  # cluster producer
  module clusterproducer = IslandClusterProducer
  {
    string clusterCollection = "clusterCollection"
    double IslandBarrelSeedThr = 2
    double IslandEndcapSeedThr = 2
  }

  # supercluster producer
  module superclusterproducer = SuperClusterProducer
  {
    string superclusterCollection = "superclusterCollection"
  }

  # corrected supercluster producer
  module correctedscproducer = EgammaSCCorrectionMaker
  {
    string recHitProducer = "mymodule"
    string recHitCollection = "hitCollection"
    string rawSuperClusterProducer = "superclusterproducer"
    string rawSuperClusterCollection = "superclusterCollection"
    double sigmaElectronicNoise = 0.03
        
    bool applyEnergyCorrection = true
    string corectedSuperClusterCollection = "correctedsuperclusterCollection"
  }

  sequence s1 = { mymodule&clusterproducer&superclusterproducer&correctedscproducer }

  path p = { s1 }
}

