process egammaTutorial = 
{

  source = PoolSource 
  {
    # Number of events program should run
    #untracked vstring fileNames = {'rfio:/castor/cern.ch/user/t/tsirig/500ele50GeVEcalRecHits.root'}
    untracked vstring fileNames = {'file:/data/futyand/e-10gev-fabio-rechits-filtered.root'}
    untracked int32 maxEvents = -1
  }

  # for the geometry:
  es_source = XMLIdealGeometryESSource 
  {
    FileInPath GeometryConfiguration = "SimG4CMS/Calo/test/data/testConfiguration.xml"
    string rootNodeName = ""
  }
  es_module = EcalBarrelGeometryEP {}
  es_module = EcalEndcapGeometryEP {}
  es_module = HcalHardcodeGeometryEP {}  
  es_module = CaloTowerHardcodeGeometryEP {}  
  es_module = CaloGeometryBuilder {}

  #Island clustering:

  # cluster producer
  module islandBasicClusterProducer = IslandClusterProducer
  {
    string hitCollection = "EcalRecHitsEB"
    string hitProducer = "ecalrechit"
    string clusterCollection = "islandBasicClusterCollection"
    double IslandBarrelSeedThr = 2
    double IslandEndcapSeedThr = 2
  }

  # supercluster producer
  module islandSuperClusterProducer = SuperClusterProducer
  {
    string superclusterCollection = "islandSuperClusterCollection"
  }

  # corrected supercluster producer
  module correctedIslandSuperClusterProducer = EgammaSCCorrectionMaker
  {
    string recHitProducer = "ecalrechit"
    string recHitCollection = "EcalRecHitsEB"
    string rawSuperClusterProducer = "islandSuperClusterProducer"
    string rawSuperClusterCollection = "islandSuperClusterCollection"
    double sigmaElectronicNoise = 0.03
                                                                                                                             
    bool applyEnergyCorrection = true
    string corectedSuperClusterCollection = "correctedIslandSuperClusterCollection"
  }

  sequence islandSequence = { islandBasicClusterProducer&islandSuperClusterProducer&correctedIslandSuperClusterProducer }


  #Hybrid clustering:

  # cluster producer
  module hybridSuperClusterProducer = HybridClusterProducer
  {
    double HybridBarrelSeedThr = 2
    double HybridEndcapSeedThr = 2 
    int32 step = 14
    double ethresh = .5
    double ewing = 1.0
    double eseed = 1.0

    string basicclusterCollection = "HybridBasicClusterCollection"
    string superclusterCollection = "HybridSuperClusterCollection"
    string ecalhitproducer = "ecalrechit"
    string ecalhitcollection = "EcalRecHitsEB"
  }

  # corrected supercluster producer
  module correctedHybridSuperClusterProducer = EgammaSCCorrectionMaker
  {
    string recHitProducer = "ecalrechit"
    string recHitCollection = "EcalRecHitsEB"
    string rawSuperClusterProducer = "hybridSuperClusterProducer"
    string rawSuperClusterCollection = "HybridSuperClusterCollection"
    double sigmaElectronicNoise = 0.03
                                                                                                                             
    bool applyEnergyCorrection = true
    string corectedSuperClusterCollection = "correctedHybridSuperClusterCollection"
  }

  sequence hybridSequence = { hybridSuperClusterProducer&correctedHybridSuperClusterProducer }

  path p = { islandSequence&hybridSequence }

  module o2 = PoolOutputModule 
  { 
     untracked string fileName = "egammaTutorial.root" 
     untracked vstring outputCommands = 
     {
       "drop *",
       "keep edmHepMCProduct_*_*_*",
       "keep recoBasicClusters_*_*_*",
       "keep recoSuperClusters_*_*_*"
     }
  }
 
  endpath outpath = { o2 }
}

