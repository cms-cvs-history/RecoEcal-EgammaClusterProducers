# stream selected electrons 
#
#
process ReducedRecHitProductionTesting = 
{

  untracked PSet maxEvents = {untracked int32 input = -1}
  untracked PSet options = {
      untracked bool wantSummary = true  # default is false
  }

  include "FWCore/MessageLogger/data/MessageLogger.cfi"

  #--------------------------------
  # geometry needed for clustering
  #--------------------------------
  include "RecoEcal/EgammaClusterProducers/data/geometryForClustering.cff"

  source = PoolSource {
    untracked vstring fileNames =
	{
	    'file:/tmp/468AA3A0-D6A4-DC11-998C-000423D98DC4.root'
	}
    }


    #  ReducedRecHit producer EB
    module reduceRecHitsEB = ReducedRecHitCollectionProducer
      {
        InputTag recHitsLabel = ecalRecHit:EcalRecHitsEB
        InputTag basicClustersLabel = hybridSuperClusters
        
        string reducedHitsCollection = "hybridRecHits"
        
        int32 etaSize = 5
        int32 phiSize = 5
      }

    #  ReducedRecHit producer EE
    module reduceRecHitsEE = ReducedRecHitCollectionProducer
      {
        InputTag recHitsLabel = ecalRecHit:EcalRecHitsEE
        InputTag basicClustersLabel = islandBasicClusters:islandEndcapBasicClusters
        
        string reducedHitsCollection = "islandRecHits"
        
        int32 etaSize = 5
        int32 phiSize = 5
      }



    path p4 = { reduceRecHitsEB, reduceRecHitsEE }



# --- output module ------------------------------------------------


    module outReducedRecHit = PoolOutputModule
    {
      untracked string fileName = "reducedHits.root" 
      untracked vstring outputCommands = 
      {
          "drop  *",
          "keep  *_reduceRecHits*_*_*",
          "keep  *_ecalRecHit_*_*",
          "keep  *Shape*_*_*_*"
      }
	untracked PSet SelectEvents = 
	{
	    vstring SelectEvents = { "p4" }
	}
    }
    
    endpath outpathAlca = { outReducedRecHit }

}
