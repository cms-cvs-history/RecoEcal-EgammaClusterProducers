#
#  run on collection of ecal rechits to make super clusters and store them
#  in the output collection
#
#  Author: David Futyan & Shahram Rahatlou
#  $Id: egammaRecHitsToClusters.cfg,v 1.14 2006/09/23 17:41:56 rahatlou Exp $
#
process eg =
{

  # initialize  MessageLogger
  include "FWCore/MessageLogger/data/MessageLogger.cfi"

  # input module. assume root file contains EcalRecHits
  source = PoolSource
  {
    # Number of events program should run
    #untracked vstring fileNames = {'file:egamma_rechits.root'}
    untracked vstring fileNames = {'/store/unmerged/RelVal/2006/9/24/RelVal101Z-EE/GEN-SIM-DIGI-RECO/0005/0AC156B5-094C-DB11-A4D3-000E0C4D2475.root'}
    untracked int32 maxEvents = -1
  }

  # all clustering in one sequence
  include "RecoEcal/EgammaClusterProducers/data/ecalClusteringSequence.cff"

  # create path with all clustering algos
  path p = { ecalClusteringSequence }


  # output module so store ony (super)clusters and MC truth
  module o2 = PoolOutputModule
  {
     untracked string fileName = "egamma_clusters.root"
     untracked vstring outputCommands = {
       "drop *",
       "keep edmHepMCProduct_*_*_*",
       "keep *_islandBasicClusters_*_*",
       "keep *_islandSuperClusters_*_*",
       "keep *_hybridSuperClusters_*_*",
       "keep *_correctedIslandEndcapSuperClusters_*_*",
       "keep *_correctedHybridSuperClusters_*_*",
       "keep *_preshowerClusters_*_*",
       "keep *_piZeroDiscriminators_*_*"
     }
  }

  # print event number
  module counter = AsciiOutputModule {}

  endpath outpath = { counter, o2 }
}

